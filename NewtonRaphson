package newtonrapshson;

import java.lang.Math;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Scanner;

public class Newtonrapshson {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in); //scanner object defined
        System.out.print("Enter the number of terms: ");
        int ask = scan.nextInt();
        int coeff = 0,npow = 0;
        String cha = null,var = null,expo = null,plus = null,a; //variables defined
        String[] data = {};
        LinkedList<String> list1 = new LinkedList<String>(Arrays.asList(data));//linked list defined to store function terms
        int[] co = new int [ask];
        int[] c = new int[ask];
        int[] po = new int[ask];
        int[] p = new int[ask];
         int k=0;
         System.out.print("\nEnter the function in format(Coefficient * Variable ^ Exponent): ");
        do{
            
            coeff = scan.nextInt();
            cha = scan.next(); // *
            var = scan.next();
            expo = scan.next(); // ^
            npow = scan.nextInt(); 
            c[k] = coeff;
            p[k] = npow;
            for(int i=1;i<=1;i++){
                if(npow==0)
                    coeff=0;
                else
                    coeff=coeff*(npow--);// calculating 3 degree differetiation
            }

            co[k]=coeff;
            po[k]=npow;

            plus = scan.next(); // if more than one terms are entered 
            a = new String(coeff+"*"+var+"^"+npow+plus); //storing terms in form of results in string 

            list1.add(a); 
            k++;
        }while(plus.equals("+") || plus.equals("-"));
        
        System.out.print("\nDiffrentiated function is as follows: ");
        for(int j=0;j<list1.size();j++){
            System.out.print(list1.get(j)); // printing function terms on console
        }
       System.out.println("\n");
       
       System.out.print("Enter starting value of x: ");
       float x = scan.nextFloat();
       int count = 0;
       while(true && count<500){
       float fdashx = 0;
       for(int fdx=0;fdx<ask;fdx++){
               fdashx=(float)(fdashx+co[fdx]*(Math.pow(x,po[fdx])));
       }
       
       float fx = 0;
       fx=(float) (c[0]*(Math.pow(x,p[0])));
       for(int f=1;f<ask;f++){
           fx=(float) (fx+c[f]*(Math.pow(x,p[f])));
       }
       
       float nextx = x-(fx/fdashx);
       //System.out.print(nextx);
       if((x-nextx)<(0.000001) && (x-nextx)>=(-0.0000001)){
            break;
       }
       x=nextx;
       count++;
       }
       if(count!=500)
           System.out.println("\n"+x+" is the root.");
       else 
           System.out.println("No Root Exists");       
    }
    
}
